@synth filterwobble
longname : Pitch and filter wobbles
type : synth
author : Guy J Brown
version : 1.0
doc : A demo of how to modulate pitch and filter cutoff with a square-wave LFO, try this with a high pitch.
@end

@param lfo_rate
type: float
mutable: yes
step: 0.01
min: 0
max: 1
default : 0.3
doc : controls the LFO rate
@end

@param cutoff
type: float
mutable: yes
step: 0.01
min: 20
max: 20000
default: 6000
doc: filter cutoff
@end

@param resonance
type: float
mutable: yes
step: 0.01
min: 0
max: 30
default: 20
doc: filter resonance
@end

@param filter_mod
type: float
mutable: yes
step: 0.01
min: 0
max: 1000
default: 500
doc: filter modulation depth
@end

@param attack
type: float
mutable: yes
step: 0.01
min: 0
max: 5
default: 0.1
doc: attack time
@end

@param decay
type: float
mutable: yes
step: 0.01
min: 0
max: 5
default: 1.5
doc: decay time
@end

@param sustain
type: float
mutable: yes
step: 0.01
min: 0
max: 1
default: 0
doc: sustain level
@end

@param release
type: float
mutable: yes
step: 0.01
min: 0
max: 5
default: 0.1
doc: release time
@end

@param volume
type: float
mutable: no
step: 0.01
min: 0
max: 1
default : 0.8
doc : controls the overall volume
@end

# modules

SAW-OSC : saw
SQR-OSC : lfo
LPF: lowpass
VCA : pitchmod
VCA : filtermod
VCA : vca
ADSR : pitchenv
ADSR : env

pitchenv.level = param.pitch
pitchenv.sustain = param.pitch*0.2
pitchenv.attack = 0
pitchenv.decay = 2
pitchenv.release = 0.1

pitchenv.out -> saw.pitchCV

saw.out -> lowpass.in
lowpass.out -> vca.in
vca.out -> audio.in

lfo.out -> pitchmod.in
pitchmod.out -> saw.pitchCV
lfo.out -> filtermod.in
filtermod.out -> lowpass.cutoffCV

env.out -> vca.levelCV

env.attack = param.attack
env.level = param.level*param.volume*0.2
env.decay = param.decay
env.sustain = param.sustain*param.level*param.volume*0.2
env.release = 0.1

lowpass.cutoff = param.cutoff
filtermod.level = param.filter_mod
lowpass.resonance = param.resonance

saw.pitch = param.pitch
lfo.pitch = map(param.lfo_rate,0.1,20)

pitchmod.level = 200

# end


