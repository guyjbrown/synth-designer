@synth twoopfm
longname : Two operator FM
type : synth
author : Guy J Brown
version : 1.0
doc : Two operator FM with carrier, modulator and feedback
@end

# parameters

@param transpose
type : float
mutable: yes
step : 0.05
min : 0.25
max : 4
default : 1
doc : carrier transpose
@end

@param fm
type : float
mutable: yes
step : 0.01
min : 0
max : 1
default : 0.36
doc : fm amount
@end

@param feedback
type : float
mutable: yes
step : 0.01
min : 0
max : 1
default : 0
doc : modulator feedback
@end

@param ratio
type : float
mutable: yes
step : 0.01
min : 0.5
max : 32
default : 4.5
doc : frequency ratio
@end

@param mod_decay
type : float
mutable: yes
step : 0.01
min : 0.1
max : 10
default : 2
doc : modulator decay
@end

@param car_decay
type : float
mutable: yes
step : 0.01
min : 0.1
max : 10
default : 2
doc : carrier decay
@end

@param attack
type: float
mutable: yes
step: 0.01
min: 0
max: 5
default: 0.1
doc: attack time
@end

@param decay
type: float
mutable: yes
step: 0.01
min: 0
max: 5
default: 0.1
doc: decay time
@end

@param sustain
type: float
mutable: yes
step: 0.01
min: 0
max: 1
default: 1
doc: sustain level
@end

@param release
type: float
mutable: yes
step: 0.01
min: 0
max: 5
default: 0.1
doc: release time
@end

@param volume
type : float
mutable: yes
step : 0.01
min : 0
max : 1
default : 0.7
doc : master volume control
@end

# modules

SIN-OSC : carrier
SIN-OSC : modulator
VCA : vca
VCA : mix
VCA : feedback
VCA : gain
DECAY : carenv
DECAY : modenv
ADSR : env

# carrier to audio 

carrier.out -> vca.in
vca.out -> audio.in
env.out -> vca.levelCV

# frequency modulation

modulator.out -> gain.in
gain.out -> mix.in
mix.out -> carrier.pitchCV

# feedback

carrier.out -> feedback.in
feedback.out -> mix.in

# tweak

carrier.pitch = param.pitch*param.transpose
modulator.pitch = param.pitch*param.ratio
feedback.level = param.feedback*1000

# carrier envelope

carenv.out -> vca.levelCV
carenv.level = param.level*param.volume
carenv.decay = param.car_decay
carenv.attack = 0.01

# modulator envelope

modenv.out -> gain.levelCV
modenv.level = param.fm*1000
modenv.decay = param.mod_decay
modenv.attack = 0.01

# overall envelope

env.level = param.level*param.volume*0.1
env.attack = param.attack
env.decay = param.decay
env.sustain = param.sustain*param.level*param.volume*0.1
env.release = param.release

# end
