@synth fmbell
longname : FM Bell
type : synth
author : Guy Brown
version : 1.0
doc : Simple example of FM synthesis to make a bell sound
@end

@param timbre
type: float
mutable: yes
step: 0.01
min: 0
max: 1
default : 0.4
doc : Controls the harmonicity of the bell sound
@end

@param attack
type: float
mutable: yes
step: 0.01
min: 0
max: 5
default: 0
doc: attack time
@end

@param decay
type: float
mutable: yes
step: 0.01
min: 0
max: 5
default: 1.2
doc: decay time
@end

@param sustain
type: float
mutable: yes
step: 0.01
min: 0
max: 1
default: 0
doc: sustain level
@end

@param release
type: float
mutable: yes
step: 0.01
min: 0
max: 5
default: 0.7
doc: release time
@end

@param volume
type: float
mutable: no
step: 0.01
min: 0
max: 1
default : 0.28
doc : Controls the overall volume of the bell sound
@end

# modules

SIN-OSC : carrier
SIN-OSC : modulator
VCA : gain
VCA : vca
ADSR : env

# patch

modulator.out -> gain.in
gain.out -> carrier.pitchCV
carrier.detune = 0
modulator.detune = 600
env.out -> vca.levelCV

carrier.out -> vca.in
vca.out -> audio.in

env.attack = param.attack
env.decay = param.decay
env.sustain = param.level*param.volume*param.sustain
env.release = param.release
env.level = param.level*param.volume

gain.level = map(param.timbre,1,2000)*map(param.level,0,1)

# tweak

carrier.pitch = param.pitch
modulator.pitch = param.pitch

# end
