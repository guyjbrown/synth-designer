@synth rolandtb
longname: Roland TB303 Bassline
type : synth
author: Guy Brown
version: 1.0
doc: Simulation of roland TB3030 bassline. Both saw and square oscillators are provided with variable level. You can use the square to thicken the sound, or detune it to make a sub oscillator. Add distortion and delay for the typical TB303 bass sound.
@end

# parameter

@param saw_level
type: float
mutable: yes
step: 0.01
min: 0
max: 1
default: 1
doc : level of the sawtooth oscillator
@end

@param sqr_level
type: float
mutable: yes
step: 0.01
min: 0
max: 1
default: 0
doc : level of the square wave oscillator
@end

@param detune
type: float
mutable: yes
step: 0.01
min: -2400
max: 2400
default: -1200
doc : detune amount of the square wave oscillator in cents
@end

@param cutoff
type: float
mutable: yes
step: 0.01
min: 20
max: 10000
default: 3900
doc : filter cutoff in Hz
@end

@param resonance
type: float
mutable: yes
step: 0.01
min: 0
max: 25
default: 5
doc : filter resonance
@end

@param env_mod
type: float
mutable: no
step: 0.01
min: 0
max: 0.95
default: 0.4
doc : envelope modulation amount
@end

@param decay
type: float
mutable: no
step: 0.01
min: 0
max: 1
default: 0.2
doc : filter decay time
@end

@param volume
type: float
mutable: no
step: 0.01
min: 0
max: 1
default: 0.7
doc : master volume
@end

SAW-OSC : saw
SQR-OSC : sqr
VCA : sawgain
VCA : sqrgain
VCA : mix
LPF : lowpass1
ADSR : filterenv
ADSR : ampenv
VCA : vca

# patching 

saw.out -> sawgain.in
sawgain.out -> mix.in
sqr.out -> sqrgain.in
sqrgain.out -> mix.in
mix.out -> lowpass1.in
lowpass1.out -> vca.in
vca.out -> audio.in
ampenv.out -> vca.levelCV

# tweaks

mix.level = 1
sawgain.level = param.saw_level
sqrgain.level = param.sqr_level
sqr.detune = param.detune
saw.pitch = param.pitch
sqr.pitch = param.pitch
lowpass1.resonance = param.resonance

# amplitude envelope

ampenv.level = param.level*param.volume*0.4
ampenv.attack = 0.01
ampenv.release = 0.01
ampenv.sustain = param.level*param.volume*0.4
ampenv.decay = 0.1

# filter envelope

filterenv.level = param.cutoff
filterenv.attack = 0
filterenv.decay = map(param.decay,0.01,0.5)
filterenv.sustain = param.cutoff*(1-param.env_mod)
filterenv.release = 0.1

# modulate the cutoff of both filter with the envelope

filterenv.out -> lowpass1.cutoffCV

# end of file
