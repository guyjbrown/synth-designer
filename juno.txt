@synth juno
longname: Juno 106
author: Guy Brown
version: 1.0
doc: Rough simulation of Juno 106 synth
@end

# parameter

@param lfo_rate
type: float
step: 0.01
min: 0
max: 10
default: 5
doc : LFO rate
@end

@param lfo_delay
type: float
step: 0.01
min: 0
max: 10
default: 0
doc : LFO delay
@end

@param lfo
type: float
step: 0.01
min: 0
max: 10
default: 0
doc : the amount of LFO pitch modulation
@end

@param pwm
type: float
step: 0.01
min: 0
max: 10
default: 0
doc : pulse width
@end

@param pulse_width
type: float
step: 0.01
min: 0
max: 10
default: 5
doc : sets the pulse width of the pulse oscillator 
@end

@param pulse_level
type: float
step: 0.01
min: 0
max: 10
default: 5
doc : the level of the pulse oscillator
@end

@param saw_level
type: float
step: 0.01
min: 0
max: 10
default: 0
doc : the level of the saw oscillator
@end

@param sub_level
type: float
step: 0.01
min: 0
max: 10
default: 3
doc: the level of the sub-oscillator
@end

@param noise_level
type: float
step: 0.01
min: 0
max: 10
default: 1
doc: the level of the noise oscillator
@end

@param hpf_freq
type: float
step: 0.01
min: 0
max: 3
default: 0
doc: cutoff of the high pass filter
@end

@param lpf_freq
type: float
step: 0.01
min: 0
max: 10
default: 7
doc: cutoff of the low pass filter
@end

@param res
type: float
step: 0.01
min: 0
max: 10
default: 0
doc: resonance of the low pass filter
@end

@param vcf_lfo
type: float
step: 0.01
min: 0
max: 10
default: 0
doc: effect of the LFO on the filter
@end

@param vcf_kybd
type: float
step: 0.01
min: 0
max: 10
default: 0
doc: effect of the keyboard tracking on the filter
@end

@param vca_level
type: float
step: 0.01
min: -5
max: 5
default: 0
doc: VCA level
@end

@param vca_attack
type: float
step: 0.01
min: 0
max: 10
default: 0
doc: envelope attack
@end

@param vca_decay
type: float
step: 0.01
min: 0
max: 10
default: 0
doc: envelope decay
@end

@param vca_sustain
type: float
step: 0.01
min: 0
max: 10
default: 10
doc: envelope sustain
@end

@param vca_release
type: float
step: 0.01
min: 0
max: 10
default: 0
doc: envelope release
@end

@param vcf_attack
type: float
step: 0.01
min: 0
max: 10
default: 0
doc: filter attack
@end

@param vcf_decay
type: float
step: 0.01
min: 0
max: 10
default: 0
doc: filter decay
@end

@param vcf_sustain
type: float
step: 0.01
min: 0
max: 10
default: 10
doc: filter sustain
@end

@param vcf_release
type: float
step: 0.01
min: 0
max: 10
default: 0
doc: filter release
@end


@param chorus
type: int
step: 1
min: 0
max: 2
default: 1
doc: chorus off (0) or on in two modes (1,2)
@end

# oscillators

SAW-OSC : saw
PULSE-OSC : pulse
SQR-OSC : sub
NOISE : noise

TRI-OSC : lfo
VCA : lfogain
ADSR : lfoenv

VCA : mix
VCA : subgain
VCA : noisegain
VCA : pulsegain
VCA : sawgain
VCA : pwmgain
VCA : lowpasslfogain
HPF : highpass
LPF : lowpass1
LPF : lowpass2
LPF : noisefilter
VCA : vca

ADSR : ampenv
ADSR : filterenv

# patch the oscillator section

saw.out -> sawgain.in
sawgain.out -> mix.in

pulse.out -> pulsegain.in
pulsegain.out -> mix.in

noise.out -> noisefilter.in
noisefilter.out -> noisegain.in
noisegain.out -> mix.in

sub.out -> subgain.in
subgain.out -> mix.in

# patch the LFO

lfo.out -> lfogain.in
lfoenv.out -> lfogain.levelCV
lfogain.out -> pulse.pitchCV
lfogain.out -> saw.pitchCV
lfogain.out -> sub.pitchCV
lfo.out -> pwmgain.in
pwmgain.out -> pulse.pulsewidthCV

# patch the filters

mix.out -> highpass.in
highpass.out -> lowpass1.in
lowpass1.out -> lowpass2.in
lowpass2.out -> vca.in

# output

ampenv.out -> vca.levelCV
vca.out -> audio.in

# noise filter

noisefilter.cutoff = 4000
noisefilter.resonance = 4

# LFO

lfo.pitch = map(param.lfo_rate,0.1,30)
lfoenv.level = 12*map(param.lfo,0,1)
lfoenv.sustain = 12*map(param.lfo,0,1)
lfoenv.attack = map(param.lfo_delay,0,5)
lfoenv.decay = 0.1
lfoenv.release = 0.1

# we cant attach two controls to the filter CV
# since the juno filter is 24 db/oct anyway
# we use two filters in series
# the first is modulated by the LFO
# the second is modulated by the envelope

lfo.out -> lowpasslfogain.in
lowpasslfogain.out -> lowpass1.cutoffCV

filterenv.out -> lowpass2.cutoffCV

lowpasslfogain.level=map(param.vcf_lfo,0,3000)

# tweaks

pulse.pulsewidth = map(param.pulse_width,0.01,0.99)

saw.pitch = param.pitch
pulse.pitch = param.pitch
sub.pitch = param.pitch
sub.detune = -1200

sawgain.level = map(param.saw_level,0,1)
pulsegain.level = map(param.pulse_level,0,1)
noisegain.level = map(param.noise_level,0,1)
subgain.level = map(param.sub_level,0,1)

highpass.resonance = 0
highpass.cutoff = map(param.hpf_freq,0,3000)
lowpass1.resonance = map(param.res,0,20)
lowpass1.cutoff = map(param.lpf_freq,0,6000)
lowpass2.resonance = map(param.res,0,20)
lowpass2.cutoff = map(param.lpf_freq,0,6000)
mix.level = 0.4

pwmgain.level = map(param.pwm,0,0.5)

# amplitude envelope

ampenv.level = 1
ampenv.attack = map(param.vca_attack,0.0015,2)
ampenv.decay = map(param.vca_decay,0.0015,2)
ampenv.sustain = map(param.vca_sustain,0,1)
ampenv.release = map(param.vca_release,0.0015,2)

# filter envelope

filterenv.level = map(param.lpf_freq,0,6000)
filterenv.attack = map(param.vcf_attack,0.0015,2)
filterenv.decay = map(param.vcf_decay,0.0015,2)
filterenv.sustain = map(param.lpf_freq,0,6000)*map(param.vcf_sustain,0,1)
filterenv.release = 0.0015+map(param.vcf_release,0,2)

# end of file
